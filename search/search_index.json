{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ChocoLogParse Parses Chocolatey logs into easy to use objects. Docs automatically updated at heyitsgilbert.github.io/ChocoLogParse Available via the PowerShell Gallery Overview Parsing the Chocolatey logs can be daunting because at first glance it's difficult to see when things change from one thread to the next. Other tools like cmtrace don't support the Log4Net format. This module gives you a simple way of converting the logs into a simple to parse/filter objects. To also help improve discoverability we included an object formatter so that you can quickly see error log entries, etc. Installation Install-Module ChocoLogParse Examples To parse the latest Chocolatey log file run the following. Import-Module ChocoLogParse $logs = Read-ChocoLog Find install attempts of specific app (zoom in this example) Read-ChocoLog | ?{ $_.cli -like \"*zoom*\"} Once you found your thread you might want to filter in/out debug. $logs[0].logs | ?{ $_.level -ne 'DEBUG' } To grab the latest log you can use Get-ChocoLogEntry . Which is also includes a -Report flag to print an easier to read set of logs and highlight some key information at the top. Get-ChocoLogEntry Get more details at heyitsgilbert.github.io/ChocoLogParse Building and Testing If you want to contribute or would like to make a local build you just need to run the build.ps1 script with the relevant task. For your first run you'll want to run the Bootstrap which will fetch all the appropriate modules and tools (as seen in the requirements.ps1 ). .\\build.ps1 -Bootstrap -Task Test Building and testing works on Windows PowerShell and PowerShell Core.","title":"Home"},{"location":"#chocologparse","text":"Parses Chocolatey logs into easy to use objects. Docs automatically updated at heyitsgilbert.github.io/ChocoLogParse Available via the PowerShell Gallery","title":"ChocoLogParse"},{"location":"#overview","text":"Parsing the Chocolatey logs can be daunting because at first glance it's difficult to see when things change from one thread to the next. Other tools like cmtrace don't support the Log4Net format. This module gives you a simple way of converting the logs into a simple to parse/filter objects. To also help improve discoverability we included an object formatter so that you can quickly see error log entries, etc.","title":"Overview"},{"location":"#installation","text":"Install-Module ChocoLogParse","title":"Installation"},{"location":"#examples","text":"To parse the latest Chocolatey log file run the following. Import-Module ChocoLogParse $logs = Read-ChocoLog Find install attempts of specific app (zoom in this example) Read-ChocoLog | ?{ $_.cli -like \"*zoom*\"} Once you found your thread you might want to filter in/out debug. $logs[0].logs | ?{ $_.level -ne 'DEBUG' } To grab the latest log you can use Get-ChocoLogEntry . Which is also includes a -Report flag to print an easier to read set of logs and highlight some key information at the top. Get-ChocoLogEntry Get more details at heyitsgilbert.github.io/ChocoLogParse","title":"Examples"},{"location":"#building-and-testing","text":"If you want to contribute or would like to make a local build you just need to run the build.ps1 script with the relevant task. For your first run you'll want to run the Bootstrap which will fetch all the appropriate modules and tools (as seen in the requirements.ps1 ). .\\build.ps1 -Bootstrap -Task Test Building and testing works on Windows PowerShell and PowerShell Core.","title":"Building and Testing"},{"location":"en-US/Get-ChocoLogEntry/","text":"Get-ChocoLogEntry SYNOPSIS Grab a single session from the latest log file. Defaults to last exection. SYNTAX Get-ChocoLogEntry [[-Path] <String[]>] [[-Filter] <String>] [[-PatternLayout] <String>] [-Report] [-NoColor] [-ProgressAction <ActionPreference>] [<CommonParameters>] DESCRIPTION Reads the latest log file and grabs the last session EXAMPLES EXAMPLE 1 Get-ChocoLogEntry Grabs the laste entry from the latest log PARAMETERS -Path The log path you want to parse. This will default to the latest local log. This can be a directory of logs. Type: String[] Parameter Sets: (All) Aliases: Required: False Position: 1 Default value: \"$($env:ChocolateyInstall)\\logs\\\" Accept pipeline input: False Accept wildcard characters: False -Filter The filter passed to Get Child Item. Default to 'chocolatey*.log.' Type: String Parameter Sets: (All) Aliases: Required: False Position: 2 Default value: Chocolatey*.log Accept pipeline input: False Accept wildcard characters: False -PatternLayout The log4net pattern layout used to parse the log. It is very unlikely that you need to supply this. The code expects pattern names: time, session, level, and message. Type: String Parameter Sets: (All) Aliases: Required: False Position: 3 Default value: %date %thread [%-5level] - %message Accept pipeline input: False Accept wildcard characters: False -Report This changes the output to be more friendly for reporting Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -NoColor Disables colored output in the formatter. When specified, the output will be displayed without ANSI color codes. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -ProgressAction {{ Fill ProgressAction Description }} Type: ActionPreference Parameter Sets: (All) Aliases: proga Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS OUTPUTS NOTES Works for Windows PowerShell and PowerShell Core (e.g. 7). RELATED LINKS","title":"Get-ChocoLogEntry"},{"location":"en-US/Get-ChocoLogEntry/#get-chocologentry","text":"","title":"Get-ChocoLogEntry"},{"location":"en-US/Get-ChocoLogEntry/#synopsis","text":"Grab a single session from the latest log file. Defaults to last exection.","title":"SYNOPSIS"},{"location":"en-US/Get-ChocoLogEntry/#syntax","text":"Get-ChocoLogEntry [[-Path] <String[]>] [[-Filter] <String>] [[-PatternLayout] <String>] [-Report] [-NoColor] [-ProgressAction <ActionPreference>] [<CommonParameters>]","title":"SYNTAX"},{"location":"en-US/Get-ChocoLogEntry/#description","text":"Reads the latest log file and grabs the last session","title":"DESCRIPTION"},{"location":"en-US/Get-ChocoLogEntry/#examples","text":"","title":"EXAMPLES"},{"location":"en-US/Get-ChocoLogEntry/#example-1","text":"Get-ChocoLogEntry Grabs the laste entry from the latest log","title":"EXAMPLE 1"},{"location":"en-US/Get-ChocoLogEntry/#parameters","text":"","title":"PARAMETERS"},{"location":"en-US/Get-ChocoLogEntry/#-path","text":"The log path you want to parse. This will default to the latest local log. This can be a directory of logs. Type: String[] Parameter Sets: (All) Aliases: Required: False Position: 1 Default value: \"$($env:ChocolateyInstall)\\logs\\\" Accept pipeline input: False Accept wildcard characters: False","title":"-Path"},{"location":"en-US/Get-ChocoLogEntry/#-filter","text":"The filter passed to Get Child Item. Default to 'chocolatey*.log.' Type: String Parameter Sets: (All) Aliases: Required: False Position: 2 Default value: Chocolatey*.log Accept pipeline input: False Accept wildcard characters: False","title":"-Filter"},{"location":"en-US/Get-ChocoLogEntry/#-patternlayout","text":"The log4net pattern layout used to parse the log. It is very unlikely that you need to supply this. The code expects pattern names: time, session, level, and message. Type: String Parameter Sets: (All) Aliases: Required: False Position: 3 Default value: %date %thread [%-5level] - %message Accept pipeline input: False Accept wildcard characters: False","title":"-PatternLayout"},{"location":"en-US/Get-ChocoLogEntry/#-report","text":"This changes the output to be more friendly for reporting Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False","title":"-Report"},{"location":"en-US/Get-ChocoLogEntry/#-nocolor","text":"Disables colored output in the formatter. When specified, the output will be displayed without ANSI color codes. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False","title":"-NoColor"},{"location":"en-US/Get-ChocoLogEntry/#-progressaction","text":"{{ Fill ProgressAction Description }} Type: ActionPreference Parameter Sets: (All) Aliases: proga Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False","title":"-ProgressAction"},{"location":"en-US/Get-ChocoLogEntry/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"en-US/Get-ChocoLogEntry/#inputs","text":"","title":"INPUTS"},{"location":"en-US/Get-ChocoLogEntry/#outputs","text":"","title":"OUTPUTS"},{"location":"en-US/Get-ChocoLogEntry/#notes","text":"Works for Windows PowerShell and PowerShell Core (e.g. 7).","title":"NOTES"},{"location":"en-US/Get-ChocoLogEntry/#related-links","text":"","title":"RELATED LINKS"},{"location":"en-US/Read-ChocoLog/","text":"Read-ChocoLog SYNOPSIS Parses a Chocolatey log into an object that is easier to search and filter. SYNTAX Read-ChocoLog [[-Path] <String[]>] [[-FileLimit] <Int32>] [[-Filter] <String>] [[-PatternLayout] <String>] [-NoColor] [<CommonParameters>] DESCRIPTION Reads Chocolatey log(s) and creates a new set of custom objects. It highlights details that make it easier to search and filter. EXAMPLES EXAMPLE 1 Read-ChocoLog This will read the latest Chocolatey.log on the machine. PARAMETERS -Path The log path you want to parse. This will default to the latest local log. This can be a directory of logs. Type: String[] Parameter Sets: (All) Aliases: Required: False Position: 1 Default value: \"$($env:ChocolateyInstall)\\logs\\\" Accept pipeline input: False Accept wildcard characters: False -FileLimit The number of files the command should parse given a folder path. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: 2 Default value: 1 Accept pipeline input: False Accept wildcard characters: False -Filter The filter passed to Get Child Item. Default to 'chocolatey*.log.' Type: String Parameter Sets: (All) Aliases: Required: False Position: 3 Default value: Chocolatey*.log Accept pipeline input: False Accept wildcard characters: False -PatternLayout The log4net pattern layout used to parse the log. It is very unlikely that you need to supply this. The code expects pattern names: time, session, level, and message. Type: String Parameter Sets: (All) Aliases: Required: False Position: 4 Default value: %date %thread [%-5level] - %message Accept pipeline input: False Accept wildcard characters: False -NoColor Disables colored output in the formatter. When specified, the output will be displayed without ANSI color codes. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS OUTPUTS System.Collections.Generic.List`1[[ChocoLog, PowerShell Class Assembly, Version=1.0.0.3, Culture=neutral, PublicKeyToken=null]] NOTES Works for Windows PowerShell and PowerShell Core. This works on Linux. RELATED LINKS https://heyitsgilbert.github.io/ChocoLogParse/en-US/Read-ChocoLog/","title":"Read-ChocoLog"},{"location":"en-US/Read-ChocoLog/#read-chocolog","text":"","title":"Read-ChocoLog"},{"location":"en-US/Read-ChocoLog/#synopsis","text":"Parses a Chocolatey log into an object that is easier to search and filter.","title":"SYNOPSIS"},{"location":"en-US/Read-ChocoLog/#syntax","text":"Read-ChocoLog [[-Path] <String[]>] [[-FileLimit] <Int32>] [[-Filter] <String>] [[-PatternLayout] <String>] [-NoColor] [<CommonParameters>]","title":"SYNTAX"},{"location":"en-US/Read-ChocoLog/#description","text":"Reads Chocolatey log(s) and creates a new set of custom objects. It highlights details that make it easier to search and filter.","title":"DESCRIPTION"},{"location":"en-US/Read-ChocoLog/#examples","text":"","title":"EXAMPLES"},{"location":"en-US/Read-ChocoLog/#example-1","text":"Read-ChocoLog This will read the latest Chocolatey.log on the machine.","title":"EXAMPLE 1"},{"location":"en-US/Read-ChocoLog/#parameters","text":"","title":"PARAMETERS"},{"location":"en-US/Read-ChocoLog/#-path","text":"The log path you want to parse. This will default to the latest local log. This can be a directory of logs. Type: String[] Parameter Sets: (All) Aliases: Required: False Position: 1 Default value: \"$($env:ChocolateyInstall)\\logs\\\" Accept pipeline input: False Accept wildcard characters: False","title":"-Path"},{"location":"en-US/Read-ChocoLog/#-filelimit","text":"The number of files the command should parse given a folder path. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: 2 Default value: 1 Accept pipeline input: False Accept wildcard characters: False","title":"-FileLimit"},{"location":"en-US/Read-ChocoLog/#-filter","text":"The filter passed to Get Child Item. Default to 'chocolatey*.log.' Type: String Parameter Sets: (All) Aliases: Required: False Position: 3 Default value: Chocolatey*.log Accept pipeline input: False Accept wildcard characters: False","title":"-Filter"},{"location":"en-US/Read-ChocoLog/#-patternlayout","text":"The log4net pattern layout used to parse the log. It is very unlikely that you need to supply this. The code expects pattern names: time, session, level, and message. Type: String Parameter Sets: (All) Aliases: Required: False Position: 4 Default value: %date %thread [%-5level] - %message Accept pipeline input: False Accept wildcard characters: False","title":"-PatternLayout"},{"location":"en-US/Read-ChocoLog/#-nocolor","text":"Disables colored output in the formatter. When specified, the output will be displayed without ANSI color codes. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False","title":"-NoColor"},{"location":"en-US/Read-ChocoLog/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"en-US/Read-ChocoLog/#inputs","text":"","title":"INPUTS"},{"location":"en-US/Read-ChocoLog/#outputs","text":"","title":"OUTPUTS"},{"location":"en-US/Read-ChocoLog/#systemcollectionsgenericlist1chocolog-powershell-class-assembly-version1003-cultureneutral-publickeytokennull","text":"","title":"System.Collections.Generic.List`1[[ChocoLog, PowerShell Class Assembly, Version=1.0.0.3, Culture=neutral, PublicKeyToken=null]]"},{"location":"en-US/Read-ChocoLog/#notes","text":"Works for Windows PowerShell and PowerShell Core. This works on Linux.","title":"NOTES"},{"location":"en-US/Read-ChocoLog/#related-links","text":"https://heyitsgilbert.github.io/ChocoLogParse/en-US/Read-ChocoLog/","title":"RELATED LINKS"},{"location":"en-US/about_ChocoLogParse.help/","text":"ChocoLogParse about_ChocoLogParse SHORT DESCRIPTION This module will parse Chocolatey logs and create easy to filter PS objects. LONG DESCRIPTION This module uses the Log4NetParse module to create a RegEx and parse the Chocolatey logs. The goal is to turn a flat file into a structured object that makes it easier to traverse from the PowerShell command line. Optional Subtopics EXAMPLES Read the latest Chocolatey and parse it. $logs = Read-ChocoLog Find recent packages that didn't exit successfully (0) $logs | Where-Object { $_.exitcode -ne 0 } Read logs for a specific (results cut short for brevity) > $logs[0].logs Time Level Message ---- ----- ------- 12:00:01.800 DEBUG XmlConfiguration is now operational 12:00:01.833 DEBUG Adding new type 'WebPiService' for type 'ISourceRunner' from assembly 'choco' 12:00:01.834 DEBUG Adding new type 'WindowsFeatureService' for type 'ISourceRunner' from assembly 'choco' 12:00:01.834 DEBUG Adding new type 'CygwinService' for type 'ISourceRunner' from assembly 'choco' 12:00:01.835 DEBUG Adding new type 'PythonService' for type 'ISourceRunner' from assembly 'choco' ... NOTE We attempt to capture additional info for each thread such as the CLI executed. TROUBLESHOOTING NOTE If you've customized your log4net config (not likely but possible) then you need to supply a custom pattern to your Read-ChocoLog command. See choco Issue 1378 SEE ALSO Chocolatey log4net KEYWORDS Chocolatey Log4Net ChocoLog Log4NetLog Log4NetLine","title":"ChocoLogParse"},{"location":"en-US/about_ChocoLogParse.help/#chocologparse","text":"","title":"ChocoLogParse"},{"location":"en-US/about_ChocoLogParse.help/#about_chocologparse","text":"","title":"about_ChocoLogParse"},{"location":"en-US/about_ChocoLogParse.help/#short-description","text":"This module will parse Chocolatey logs and create easy to filter PS objects.","title":"SHORT DESCRIPTION"},{"location":"en-US/about_ChocoLogParse.help/#long-description","text":"This module uses the Log4NetParse module to create a RegEx and parse the Chocolatey logs. The goal is to turn a flat file into a structured object that makes it easier to traverse from the PowerShell command line.","title":"LONG DESCRIPTION"},{"location":"en-US/about_ChocoLogParse.help/#optional-subtopics","text":"","title":"Optional Subtopics"},{"location":"en-US/about_ChocoLogParse.help/#examples","text":"Read the latest Chocolatey and parse it. $logs = Read-ChocoLog Find recent packages that didn't exit successfully (0) $logs | Where-Object { $_.exitcode -ne 0 } Read logs for a specific (results cut short for brevity) > $logs[0].logs Time Level Message ---- ----- ------- 12:00:01.800 DEBUG XmlConfiguration is now operational 12:00:01.833 DEBUG Adding new type 'WebPiService' for type 'ISourceRunner' from assembly 'choco' 12:00:01.834 DEBUG Adding new type 'WindowsFeatureService' for type 'ISourceRunner' from assembly 'choco' 12:00:01.834 DEBUG Adding new type 'CygwinService' for type 'ISourceRunner' from assembly 'choco' 12:00:01.835 DEBUG Adding new type 'PythonService' for type 'ISourceRunner' from assembly 'choco' ...","title":"EXAMPLES"},{"location":"en-US/about_ChocoLogParse.help/#note","text":"We attempt to capture additional info for each thread such as the CLI executed.","title":"NOTE"},{"location":"en-US/about_ChocoLogParse.help/#troubleshooting-note","text":"If you've customized your log4net config (not likely but possible) then you need to supply a custom pattern to your Read-ChocoLog command. See choco Issue 1378","title":"TROUBLESHOOTING NOTE"},{"location":"en-US/about_ChocoLogParse.help/#see-also","text":"Chocolatey log4net","title":"SEE ALSO"},{"location":"en-US/about_ChocoLogParse.help/#keywords","text":"Chocolatey Log4Net ChocoLog Log4NetLog Log4NetLine","title":"KEYWORDS"}]}